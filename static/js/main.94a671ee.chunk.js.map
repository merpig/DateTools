{"version":3,"sources":["components/PageHeader/PageHeader.js","components/Container/Container.js","components/CalendarCell/CalendarCell.js","components/CalendarSingle/CalendarSingle.js","components/Tabs/Tabs.js","components/DateHistoryEvents/DateHistoryEvents.js","components/DateHistory/DateHistory.js","components/Home/Home.js","components/Calendar/Calendar.js","utils.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PageHeader","props","useState","Date","toLocaleString","currentTime","setCurrentTime","useEffect","setInterval","className","Container","children","CallendarCell","day","onClick","selected","months","base","monthRows","year","month","minDay","maxDay","getDate","firstDay","getDay","days","i","push","parsedDate","date","getFullYear","toString","getMonth","CalendarSingle","setSelected","setMonth","setYear","map","toLocaleDateString","monthPartial","toLowerCase","slice","stateObj","id","window","location","host","split","history","pushState","dayClick","Tabs","active","tabs","tab","length","DateHistoryEvents","events","index","setIndex","range","setRange","reverseEvents","setReverseEvents","rangeList","filter","e","array","rangeOption","includes","item","idx","text","subText","s","value","Math","floor","onKeyDown","currentVal","target","console","log","key","substring","isNaN","parseInt","parsedInt","preventDefault","onChange","onMouseMove","tabsShort","url","setTabData","a","axios","get","html","cheerio","load","data","parse","$","each","elem","trim","replace","prev","elemHeader","child","c","title","attribs","join","name","node","DateHistory","activeTab","setActiveTab","activeTabComponent","setActiveTabComponent","setEvents","births","setBirths","deaths","setDeaths","holidays","setHolidays","scrapeSite","activeMatch","Births","Deaths","Holidays","Events","Home","style","maxHeight","Calendar","monthPartials","utils","parseUrlDate","max","validYear","validMonth","indexOf","dateFromUrl","hash","App","tabComponents","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.94a671ee.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport \"./PageHeader.css\";\n\nconst PageHeader = props => {\n    const [currentTime,setCurrentTime] = useState(new Date().toLocaleString());\n\n    useEffect(()=>{\n        setInterval(() => {\n            setCurrentTime(new Date().toLocaleString());\n          }, 1000)\n    }, []);\n\n    return <div className=\"page-header\"><h1>{currentTime}</h1></div>;\n};\n  \nexport default PageHeader;","import \"./Container.css\";\n\nconst Container = props => {\n    return <div className=\"container\">{props.children}</div>\n};\n  \nexport default Container;","import \"./CalendarCell.css\";\n\nconst CallendarCell = ({day,onClick,selected}) => {\n    return (\n        <div \n            className={`calendar-cell ${selected}`} \n            onClick={onClick}\n        >\n            {day}\n        </div>\n    );\n};\n  \nexport default CallendarCell;","import { useState } from 'react';\nimport CalendarCell from \"../CalendarCell/CalendarCell\";\nimport \"./CalendarSingle.css\";\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst base = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n\nfunction monthRows(year, month) {\n    let minDay = 1;\n    let maxDay = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n\n    const days = [];\n\n    if (firstDay > 0) minDay -= firstDay;\n    for (let i = minDay; i <= maxDay; i++) {\n        const day = new Date(year, month, i).getDay();\n        days.push(new Date(year, month, i));\n        if (i === maxDay && day < 6) maxDay++;\n    }\n\n    return days;\n}\n\nfunction parsedDate(date) {\n    return date.getFullYear().toString() + date.getMonth().toString() + date.getDate().toString();\n}\n\nconst CalendarSingle = ({ selected, setSelected }) => {\n    const [month, setMonth] = useState(selected.getMonth());\n    const [year, setYear] = useState(selected.getFullYear());\n\n    const subtractMonth = () => {\n        if (month > 0) setMonth(month - 1);\n        else {\n            setMonth(11);\n            setYear(year - 1);\n        }\n    }\n\n    const addMonth = () => {\n        if (month < 11) setMonth(month + 1);\n        else {\n            setMonth(0);\n            setYear(year + 1);\n        }\n    }\n\n    const dayClick = (year, month, day) => {\n        if (selected.toLocaleDateString() === new Date(year.toString(), month.toString(), day).toLocaleDateString()) return;\n\n        let monthPartial = months[month].toLowerCase().slice(0, 3);\n        let stateObj = { id: \"100\" };\n\n        window.location.host.split(\":\")[0] === \"localhost\" || window.location.host.split(\":\")[0] === \"DateTools\" ?\n            window.history.pushState(stateObj,\n                \"DateTools\", `/#/${year}/${monthPartial}/${day}`) :\n            window.history.pushState(stateObj,\n                \"DateTools\", `/DateTools/#/${year}/${monthPartial}/${day}`)\n        setSelected(new Date(year.toString(), month.toString(), day));\n    }\n\n    return (\n        <div className=\"calendar-container\">\n                <div className=\"calendar-title-container\">\n                    <div className=\"calendar-left-arrow calendar-arrow\" onClick={subtractMonth}>{\"<\"}</div>\n                    <div className=\"calendar-title\">{months[month] + \", \" + year}</div>\n                    <div className=\"calendar-right-arrow calendar-arrow\" onClick={addMonth}>{\">\"}</div>\n                </div>\n                <div className=\"calendar-body\">\n                    <div className=\"calendar-body-content\">\n                        {base.map((day, i) =>\n                            <CalendarCell\n                                key={i}\n                                day={day}\n                                onClick={() => { }}\n                                selected=\"header-cell\"\n                            />\n                        )}\n                        {monthRows(year, month).map((day, i) => {\n                            return day.getMonth() !== month ?\n                                <CalendarCell\n                                    key={i}\n                                    onClick={() => { }}\n                                    selected=\"\"\n                                /> :\n                                <CalendarCell\n                                    key={i}\n                                    day={day.getDate()}\n                                    onClick={() => dayClick(day.getFullYear(), day.getMonth(), day.getDate())}\n                                    selected={parsedDate(day) === parsedDate(selected) ? \"active-cell\" : \"\"}\n                                />\n                        })}\n                    </div>\n                </div>\n        </div>\n    );\n};\n\nexport default CalendarSingle;","import \"./Tabs.css\";\n\nconst Tabs = ({active,onClick,tabs}) => {\n    return (\n        <div className=\"tabs container\">\n            <div className=\"row\">\n                {tabs.map(tab=>\n                    <div \n                        key={tab}\n                        className={`${12%tabs.length===0?\"col-\"+12/tabs.length:\"col\"} ${active===tab?\"active-tab\":\"tab\"}`}\n                        onClick={()=>onClick(tab)}\n                    >\n                        {tab}\n                    </div>\n                )}\n            </div>\n        </div>  \n    );\n};\n  \nexport default Tabs;","import { useState, useEffect } from 'react';\nimport \"./DateHistoryEvents.css\";\n\nfunction reverse(array) {\n    return array.map((item, idx) => array[array.length - 1 - idx])\n}\n\nconst DateHistoryEvents = ({ events }) => {\n    const [index, setIndex] = useState(0);\n    const [range, setRange] = useState(5);\n    const [reverseEvents, setReverseEvents] = useState(true);\n\n    const rangeList = [5, 10, 25].filter(e => e <= events.length);\n\n    if (events.length > rangeList[rangeList.length - 1]) rangeList.push(events.length);\n\n    useEffect(() => {\n        events.length >= 5 ? setRange(5) : setRange(events.length);\n        setIndex(0);\n        setReverseEvents(true);\n    }, [events]);\n\n    const backPage = () => {\n        if (index > 0) {\n            index - range >= 0 ? setIndex(index - range) : setIndex(0);\n        }\n    }\n\n    const forwardPage = () => {\n        if (index < events.length - range) {\n            setIndex(index + range)\n        }\n    }\n\n    const validateInput = (e) => {\n        let currentVal = e.target.value;\n        console.log(e.key);\n        if (e.key === \"Backspace\") {\n            e.target.value = e.target.value.substring(0, currentVal.length - 1);\n\n            if (!isNaN(range * parseInt(e.target.value) - range)) {\n                setIndex(range * parseInt(e.target.value) - range);\n            };\n        }\n        else if (!isNaN(parseInt(e.key))) {\n            let parsedInt = parseInt(currentVal + e.key);\n            if (parsedInt > 0 && parsedInt <= (Math.floor(events.length / range) + 1)) {\n                e.target.value = currentVal + e.key;\n                setIndex(range * parseInt(e.target.value) - range);\n            }\n        }\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"tab-list\">\n                <div className=\"range-selectors\">\n                    {rangeList.filter(e => e <= events.length).map(rangeOption =>\n                        <div\n                            key={rangeOption}\n                            className={rangeOption === range ? \"range-selected\" : \"range-selector\"}\n                            onClick={() => setRange(rangeOption)}\n                        >\n                            {[5, 10, 25].includes(rangeOption) ? rangeOption : \"All\"}\n                        </div>\n                    )}\n                </div>\n                <div className=\"tab-results-info\">\n                    {index + 1}-{(index + range) < events.length ? (index + range) : events.length} of {events.length}\n                </div>\n                <div className=\"dh-filter\" onClick={() => setReverseEvents(!reverseEvents)}>\n                    {reverseEvents ? \"▼ Reverse\" : \"▲ Reverse\"}\n                </div>\n            <div className=\"tab-list-contents\">\n                    <ul>\n                        {reverseEvents ?\n                            reverse(events)\n                                .filter((e, i) => i >= index && i < index + range)\n                                .map((e, i) =>\n                                    <li key={i}>\n                                        {e.text}\n                                        {e.subText.length ?\n                                            <ul>\n                                                {e.subText.map(s => <li key={s}>{s}</li>)}\n                                            </ul> : e.subText}\n                                    </li>) :\n\n                            events\n                                .filter((e, i) => i >= index && i < index + range)\n                                .map((e, i) =>\n                                    <li key={i}>\n                                        {e.text}\n                                        {e.subText.length ?\n                                            <ul>\n                                                {e.subText.map(s => <li key={s}>{s}</li>)}\n                                            </ul> : e.subText}\n                                    </li>)\n                        }\n                    </ul>\n            </div>\n \n            <div className=\"page-selectors\">\n                <div\n                    className=\"page-selector\"\n                    onClick={backPage}\n                >\n                    {\"<\"}\n                </div>\n                <input\n                    className=\"page-number\"\n                    value={Math.floor(index / range) + 1}\n                    onKeyDown={validateInput}\n                    onChange={() => { }}\n                    onMouseMove={(e) => e.preventDefault()}\n                >\n                </input>\n                <div\n                    className=\"page-selector\"\n                    onClick={forwardPage}\n                >\n                    {\">\"}\n                </div>\n            </div>\n            <div className=\"page-info\">\n                Page\n            </div>\n                \n        </div>\n    );\n};\n\nexport default DateHistoryEvents;","import {useState,useEffect} from 'react';\nimport Tabs from \"../Tabs/Tabs\";\nimport Events from \"../DateHistoryEvents/DateHistoryEvents\"\nimport axios from 'axios';\nimport cheerio from 'cheerio';\nimport \"./DateHistory.css\";\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst tabs = [\n    \"Events\",\n    \"Births\",\n    \"Deaths\",\n    \"Holidays and observances\"\n];\n\nconst tabsShort = [\n    \"Events\",\n    \"Births\",\n    \"Deaths\",\n    \"Holidays\"\n];\n\nasync function scrapeSite(url,setTabData){\n    const html = await axios.get(url);\n    const $ = await cheerio.load(html.data.parse.text);\n    let data = {};\n\n    $('h2').each((i, elem) => {\n        if (i > 0 && i <= 4) {\n            data[$(elem).text().trim().replace('[edit]','')]=[];\n        }\n    });\n\n    //console.log(data);\n\n    $('ul').each((i, elem) => {\n        if(elem.prev&&elem.prev.prev){\n            const elemHeader = $(elem.prev.prev).text().trim().replace('[edit]','')\n            if (tabs.includes(elemHeader)) {\n                // console.log($(elem.prev.prev).text().trim())\n                // console.log(\"---------------------------------\");\n                $(elem).children().each((i, child) =>{\n                    //if(elemHeader===\"Holidays and observances\")\n                    // console.log(\n                    //     child\n                    //         .children\n                    //         .filter(c=>c.name===\"ul\").length?\n                    //         child\n                    //             .children\n                    //             .filter(c=>c.name===\"ul\")[0]\n                    //             .children\n                    //             .filter(node=>node.name)\n                    //             .map(node=>$(node).text())\n                    //         :[]\n                            // .filter(c=>[c.data,c.title])\n                            // .map(e=>e.attribs?e.children[0].data:e.data)\n                            // .join(\" \")\n                            // .replace(/\\s+/g, \" \")\n                            \n                    //);\n                    data[elemHeader].push({\n                        text:child\n                                .children\n                                .filter(c=>[c.data,c.title])\n                                .map(e=>e.attribs?e.children[0].data:e.data)\n                                .join(\" \")\n                                .replace(/\\s+/g, \" \"),\n                        subText:child\n                                .children\n                                .filter(c=>c.name===\"ul\").length?\n                                child\n                                    .children\n                                    .filter(c=>c.name===\"ul\")[0]\n                                    .children\n                                    .filter(node=>node.name)\n                                    .map(node=>$(node).text())\n                                :[]\n                    })\n                });\n            }\n        }\n    });\n\n    setTabData(data);\n}\n\nconst DateHistory = ({month,day,year}) => {\n    const [activeTab,setActiveTab] = useState(\"Events\");\n    const [activeTabComponent,setActiveTabComponent] = useState();\n    const [events,setEvents] = useState([]);\n    const [births,setBirths] = useState([]);\n    const [deaths,setDeaths] = useState([]);\n    const [holidays,setHolidays] = useState([]);\n\n    const setTabData=(data)=>{\n        setEvents(data[\"Events\"]);\n        setBirths(data[\"Births\"]);\n        setDeaths(data[\"Deaths\"]);\n        setHolidays(data[\"Holidays and observances\"]);\n    }\n\n\n\n    useEffect(()=>{\n        //console.log(\"Component loaded\");\n        const url = `https://en.wikipedia.org/w/api.php?origin=*&action=parse&page=${months[month-1]}_${day}&prop=text&formatversion=2&format=json`;\n        scrapeSite(url,setTabData);\n    },[day, month]);\n\n    useEffect(()=>{\n        if(!events.length) return;\n        const activeMatch = {\n            Births:births,Deaths:deaths,Holidays:holidays,Events:events\n        };\n        setActiveTabComponent(<Events events={activeMatch[activeTab]}/>);\n    },[events, activeTab, births, deaths, holidays]);\n\n    return (\n        <div className=\"tabs-body-container-border\">\n            <div className=\"tabs-title-container\">\n                <div className=\"tabs-title\">\n                    On \n                    <div className=\"tabs-title-date\">\n                        {months[month-1]} {day}\n                    </div>\n                    in history\n                </div>\n            </div>\n            <Tabs active={activeTab} onClick={setActiveTab} tabs={tabsShort}/>\n            <div className=\"tabs-body\">\n                {activeTabComponent}\n            </div>\n        </div>\n    );\n};\n  \nexport default DateHistory;","import CalendarSingle from \"../CalendarSingle/CalendarSingle\";\nimport DateHistory from \"../DateHistory/DateHistory\";\n\nconst Home = ({selected,setSelected}) => {\n    return (\n        <div className=\"home row\">\n            <div className=\"col-md-3\">\n                <div className=\"row\" style={{maxHeight:\"50%\"}}>\n                    <CalendarSingle selected={selected} setSelected={setSelected}/>\n                </div>\n            </div>\n            <div className=\"col-md-9\">\n                <DateHistory \n                    selected={selected}\n                    month={selected.getMonth()+1}\n                    year={selected.getFullYear()}\n                    day={selected.getDate()}\n                />\n            </div>\n        </div>\n    );\n};\n  \nexport default Home;","const Calendar = props => {\n    return (\n        <div>\n            Content Coming Soon\n        </div>\n    );\n};\n  \nexport default Calendar;","const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  \n  const monthPartials = {\n    \"jan\":\"January\",\n    \"feb\":\"February\",\n    \"mar\":\"March\",\n    \"apr\":\"April\",\n    \"may\": \"May\",\n    \"jun\": \"June\",\n    \"jul\": \"July\",\n    \"aug\": \"August\",\n    \"sep\": \"September\",\n    \"oct\": \"October\",\n    \"nov\": \"November\",\n    \"dec\": \"December\"\n  }\n  const utils = {\n    parseUrlDate: function([year,month,day]){\n        let validYear = \"\";\n        let validMonth = \"\";\n    \n        let min = 0;\n        let max;\n    \n        if(!isNaN(year)&&parseInt(year)>=0){\n            validYear+=parseInt(year);\n        }\n        else return new Date();\n    \n        if(monthPartials[month]){\n            validMonth+=(months.indexOf(monthPartials[month]));\n        }\n        else return new Date();\n    \n        max = new Date(validYear,(parseInt(validMonth)+1).toString(),0).getDate();\n    \n        if(parseInt(day)>min&&parseInt(day)<=max){\n            return new Date(validYear,validMonth,parseInt(day));\n        }\n    \n        return new Date();\n    },\n\n    dateFromUrl : function({hash}){\n        return utils.parseUrlDate(hash.split(\"/\").slice(-3));\n    }\n}\n\nexport default utils;","import React, { useEffect, useState } from 'react';\nimport PageHeader from \"./components/PageHeader/PageHeader\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Container from \"./components/Container/Container\";\nimport Home from \"./components/Home/Home\";\nimport Calendar from \"./components/Calendar/Calendar\"\nimport Tabs from \"./components/Tabs/Tabs\";\nimport './App.css';\nimport utils from \"./utils\";\n\nconst tabs = [\n  \"Home\",\n  \"Calendar\"\n]\n\nconst  App = () => {\n  const [selected,setSelected] = useState(utils.dateFromUrl(window.location));\n\n  const tabComponents = {\n    \"Home\":<Home selected={selected} setSelected={setSelected}/>,\n    \"Calendar\":<Calendar />\n  }\n  const [activeTab,setActiveTab] = useState(\"Home\");\n  const [activeTabComponent,setActiveTabComponent] = useState(tabComponents[\"Home\"]);\n\n  useEffect(()=>{\n    const tabComponents = {\n      \"Home\":<Home selected={selected} setSelected={setSelected}/>,\n      \"Calendar\":<Calendar />\n    }\n    setActiveTabComponent(tabComponents[activeTab]);\n  },[activeTab, selected])\n\n  return (\n    <div className=\"App\">\n      <PageHeader/>\n      <Tabs active={activeTab} onClick={setActiveTab} tabs={tabs}/>\n      <Container>\n        {activeTabComponent}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}