{"version":3,"sources":["utils.js","components/PageHeader/PageHeader.js","components/Card/Card.js","components/CalendarCell/CalendarCell.js","components/CalendarSingle/CalendarSingle.js","components/Tabs/Tabs.js","components/DateHistoryEvents/DateHistoryEvents.js","components/DateHistory/DateHistory.js","components/DateSearch/DateSearch.js","components/DateTimeUntil/DateTimeUntil.js","components/TopTenBillboards/TopTenBillboards.js","components/Home/Home.js","components/CalendarUnit/CalendarUnit.js","components/Calendar/Calendar.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["require","monthPartials","utils","parseUrlDate","max","year","month","day","validYear","validMonth","isNaN","parseInt","months","indexOf","Date","toString","getDate","dateFromUrl","pathname","split","slice","calendarDataFromUrl","tabFromUrl","timeDiff","selected","starts","moment","ends","timeDiffDays","diff","days","PageHeader","location","weather","useState","toLocaleString","currentTime","setCurrentTime","getDay","currentDay","setCurrentDay","useEffect","setInterval","className","Card","border","title","tabs","content","wholePage","underlineTitle","CallendarCell","onClick","base","monthRows","minDay","maxDay","firstDay","i","push","parsedDate","date","getFullYear","getMonth","CalendarSingle","setSelected","setMonth","setYear","map","toLocaleDateString","monthPartial","toLowerCase","stateObj","id","window","host","history","pushState","dayClick","Tabs","active","tabSize","tab","DateHistoryEvents","array","events","reverseEvents","setReverseEvents","item","idx","length","e","text","subText","s","tabsShort","url","setTabData","storeSiteData","a","axios","get","html","cheerio","load","data","parse","$","each","elem","trim","replace","prev","elemHeader","includes","children","child","filter","c","attribs","join","href","undefined","name","node","DateHistory","activeTab","setActiveTab","activeTabComponent","setActiveTabComponent","setEvents","births","setBirths","deaths","setDeaths","holidays","setHolidays","sessionStorage","getItem","JSON","scrapeSite","activeMatch","Births","Deaths","Holidays","Events","DateSearch","setDay","defaultValue","onChange","target","value","d","type","daysArray","DateTimeUntil","seconds","setSeconds","minutes","setMinutes","hours","setHours","setMonths","years","setYears","firstDateWasLater","setFirstDateWasLater","selectedDate","setSelectedDate","currentDate","setCurrentDate","contents","setContents","tense","setTense","ending","setEnding","totalDays","interval","clearInterval","TopTenBillboards","Home","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","Calendar","props","image","setImage","containerRef","useRef","toPng","current","then","dataUrl","img","Image","src","catch","error","console","ref","size","style","App","localWeather","document","getElementById","innerHTML","dayName","monthNumber","dateConfig","tabComponents","Object","keys","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","exact","path","component","URL","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d82a49ed.chunk.js","sourcesContent":["import * as moment from 'moment';\nrequire('moment-precise-range-plugin');\n  \nconst monthPartials = {\n    \"jan\":\"January\",\n    \"feb\":\"February\",\n    \"mar\":\"March\",\n    \"apr\":\"April\",\n    \"may\": \"May\",\n    \"jun\": \"June\",\n    \"jul\": \"July\",\n    \"aug\": \"August\",\n    \"sep\": \"September\",\n    \"oct\": \"October\",\n    \"nov\": \"November\",\n    \"dec\": \"December\"\n}\n\nconst utils = {\n    parseUrlDate: function([year,month,day]){\n        let validYear = \"\";\n        let validMonth = \"\";\n    \n        let min = 0;\n        let max;\n    \n        if(!isNaN(year)&&parseInt(year)>=0){\n            validYear+=parseInt(year);\n        }\n        else return new Date();\n    \n        if(monthPartials[month]){\n            validMonth+=(utils.months.indexOf(monthPartials[month]));\n        }\n        else return new Date();\n    \n        max = new Date(validYear,(parseInt(validMonth)+1).toString(),0).getDate();\n    \n        if(parseInt(day)>min&&parseInt(day)<=max){\n            return new Date(validYear,validMonth,parseInt(day));\n        }\n    \n        return new Date();\n    },\n\n    dateFromUrl : function({pathname}){\n        //console.log(location)\n        return utils.parseUrlDate(pathname.split(\"/\").slice(-3));\n    },\n\n    calendarDataFromUrl : function({pathname}){\n\n    },\n\n    tabFromUrl : function({pathname}){\n        if(pathname.split(\"/\")[1]===\"calendar\") return \"Calendar\";\n        return \"Home\";\n    },\n\n    timeDiff : selected => {\n        let starts = moment(new Date());\n        let ends   = moment(selected);\n        return moment.preciseDiff(starts, ends, true);\n    },\n\n    timeDiffDays : selected => {\n        let starts = moment(new Date());\n        let ends   = moment(selected);\n        return starts.diff(ends, 'days');\n    },\n\n    months : [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\", \"November\", \"December\"\n    ],\n\n    days : [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\n}\n\nexport default utils;\n","import {useEffect, useState} from 'react';\nimport utils from '../../utils';\n\nimport \"./PageHeader.css\";\n\n\n\n\n\nconst PageHeader = ({selected,location,weather}) => {\n    const [currentTime,setCurrentTime] = useState(new Date().toLocaleString());\n    const [currentDay,setCurrentDay] = useState(new Date().getDay());\n    \n    useEffect(()=>{\n        setInterval(() => {\n            setCurrentTime(new Date().toLocaleString());\n            if(currentDay!==new Date().getDay()){\n                setCurrentDay(new Date().getDay());\n            }\n          }, 1000)\n    }, [currentDay, currentTime]);\n\n    return (\n        <div className=\"page-header\">\n            \n            <h4>{utils.days[currentDay] + \", \" + currentTime}</h4>\n            <h6>{location}</h6>\n            <h6>{weather}</h6>\n        </div>);\n};\n  \nexport default PageHeader;","import \"./Card.css\";\n\nconst Card = ({border,title,tabs,content,wholePage,underlineTitle}) => {\n    return (\n        <div className={`card-container-${border?\"border\":\"no-border\"} container ${wholePage?\"card-whole-page\":\"\"}`}>\n\n            <div className={`card-title-container`}>\n                <div className=\"card-title\">\n                    {title}\n                </div>\n            </div>\n                \n            <div className={underlineTitle?\"underline-card-title row\":\"\"}></div>\n\n            {tabs}\n            <div className=\"card-body\">\n                {content}\n            </div>\n        </div>\n    );\n};\n  \nexport default Card;","import \"./CalendarCell.css\";\n\nconst CallendarCell = ({day,onClick,selected}) => {\n    return (\n        <div \n            className={`calendar-cell ${selected}`} \n            onClick={onClick}\n        >\n            {day}\n        </div>\n    );\n};\n  \nexport default CallendarCell;","import { useState } from 'react';\nimport CalendarCell from \"../CalendarCell/CalendarCell\";\nimport \"./CalendarSingle.css\";\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst base = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n\nfunction monthRows(year, month) {\n    let minDay = 1;\n    let maxDay = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n\n    const days = [];\n\n    if (firstDay > 0) minDay -= firstDay;\n    for (let i = minDay; i <= maxDay; i++) {\n        const day = new Date(year, month, i).getDay();\n        days.push(new Date(year, month, i));\n        if (i === maxDay && day < 6) maxDay++;\n    }\n\n    return days;\n}\n\nfunction parsedDate(date) {\n    return date.getFullYear().toString() + date.getMonth().toString() + date.getDate().toString();\n}\n\nconst CalendarSingle = ({ selected, setSelected }) => {\n    const [month, setMonth] = useState(selected.getMonth());\n    const [year, setYear] = useState(selected.getFullYear());\n\n    const subtractMonth = () => {\n        if (month > 0) setMonth(month - 1);\n        else {\n            setMonth(11);\n            setYear(year - 1);\n        }\n    }\n\n    const addMonth = () => {\n        if (month < 11) setMonth(month + 1);\n        else {\n            setMonth(0);\n            setYear(year + 1);\n        }\n    }\n\n    const dayClick = (year, month, day) => {\n        if (selected.toLocaleDateString() === new Date(year.toString(), month.toString(), day).toLocaleDateString()) return;\n\n        let monthPartial = months[month].toLowerCase().slice(0, 3);\n        let stateObj = { id: \"100\" };\n\n        window.location.host.split(\":\")[0] === \"localhost\" || window.location.host.split(\":\")[0] === \"DateTools\" ?\n            window.history.pushState(stateObj,\n                \"DateTools\", `/home/${year}/${monthPartial}/${day}`) :\n            window.history.pushState(stateObj,\n                \"DateTools\", `/DateTools/home/${year}/${monthPartial}/${day}`)\n        setSelected(new Date(year.toString(), month.toString(), day));\n    }\n\n    return (\n        <div className=\"calendar-wrapper\">\n            <div className=\"calendar-container\">\n                <div className=\"calendar-title-container\">\n                    <div className=\"calendar-left-arrow calendar-arrow\" onClick={subtractMonth}>{\"<\"}</div>\n                    <div className=\"calendar-title\">{months[month] + \", \" + year}</div>\n                    <div className=\"calendar-right-arrow calendar-arrow\" onClick={addMonth}>{\">\"}</div>\n                </div>\n                <div className=\"calendar-body\">\n                    <div className=\"calendar-body-content\">\n                        {base.map((day, i) =>\n                            <CalendarCell\n                                key={i}\n                                day={day}\n                                onClick={() => { }}\n                                selected=\"header-cell\"\n                            />\n                        )}\n                        {monthRows(year, month).map((day, i) => {\n                            return day.getMonth() !== month ?\n                                <CalendarCell\n                                    key={i}\n                                    onClick={() => { }}\n                                    selected=\"\"\n                                /> :\n                                <CalendarCell\n                                    key={i}\n                                    day={day.getDate()}\n                                    onClick={() => dayClick(day.getFullYear(), day.getMonth(), day.getDate())}\n                                    selected={parsedDate(day) === parsedDate(selected) ? \"active-cell\" : \"\"}\n                                />\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CalendarSingle;","import \"./Tabs.css\";\n\nconst Tabs = ({active,onClick,tabs,tabSize}) => {\n    return (\n        <div className=\"tabs row\">\n                {tabs.map(tab=>\n                    <div \n                        key={tab}\n                        className={`col ${tabSize} ${active===tab?\"active-tab\":\"tab\"}`}\n                        onClick={()=>onClick(tab)}\n                    >\n                        {tab}\n                    </div>\n                )}\n        </div>  \n    );\n};\n  \nexport default Tabs;","import { useState } from 'react';\nimport \"./DateHistoryEvents.css\";\n\nfunction reverse(array) {\n    return array.map((item, idx) => array[array.length - 1 - idx])\n}\n\nconst DateHistoryEvents = ({ events }) => {\n    // const [index, setIndex] = useState(0);\n    // const [range, setRange] = useState(events.length);\n    const [reverseEvents, setReverseEvents] = useState(true);\n\n    // const rangeList = [5, 10, 25].filter(e => e <= events.length);\n\n    // if (events.length > rangeList[rangeList.length - 1]) rangeList.push(events.length);\n\n    // useEffect(() => {\n    //     events.length >= 5 ? setRange(5) : setRange(events.length);\n    //     setIndex(0);\n    //     setReverseEvents(true);\n    // }, [events]);\n\n    // const backPage = () => {\n    //     if (index > 0) {\n    //         index - range >= 0 ? setIndex(index - range) : setIndex(0);\n    //     }\n    // }\n\n    // const forwardPage = () => {\n    //     if (index < events.length - range) {\n    //         setIndex(index + range)\n    //     }\n    // }\n\n    // const validateInput = (e) => {\n    //     let currentVal = e.target.value;\n    //     console.log(e.key);\n    //     if (e.key === \"Backspace\") {\n    //         e.target.value = e.target.value.substring(0, currentVal.length - 1);\n\n    //         if (!isNaN(range * parseInt(e.target.value) - range)) {\n    //             setIndex(range * parseInt(e.target.value) - range);\n    //         };\n    //     }\n    //     else if (!isNaN(parseInt(e.key))) {\n    //         let parsedInt = parseInt(currentVal + e.key);\n    //         if (parsedInt > 0 && parsedInt <= (Math.floor(events.length / range) + 1)) {\n    //             e.target.value = currentVal + e.key;\n    //             setIndex(range * parseInt(e.target.value) - range);\n    //         }\n    //     }\n    //     e.preventDefault();\n    // }\n\n    return (\n        <div className=\"tab-list\">\n                {/* <div className=\"range-selectors\">\n                    {rangeList.filter(e => e <= events.length).map(rangeOption =>\n                        <div\n                            key={rangeOption}\n                            className={rangeOption === range ? \"range-selected\" : \"range-selector\"}\n                            onClick={() => setRange(rangeOption)}\n                        >\n                            {[5, 10, 25].includes(rangeOption) ? rangeOption : \"All\"}\n                        </div>\n                    )}\n                </div>\n                <div className=\"tab-results-info\">\n                    {index + 1}-{(index + range) < events.length ? (index + range) : events.length} of {events.length}\n                </div> */}\n                <div className=\"dh-filter\" onClick={() => setReverseEvents(!reverseEvents)}>\n                    {reverseEvents ? \"▼ Reverse\" : \"▲ Reverse\"}\n                </div>\n            <div className=\"tab-list-contents\">\n                    <ul>\n                        {reverseEvents ?\n                            reverse(events)\n                                // .filter((e, i) => i >= index && i < index + range)\n                                .map((e, i) =>\n                                    <li key={i}>\n                                        {/* {\n                                            parseInt(e.text.split(' ')[0])?\n                                            <a target={\"blank\"}href={\"https://en.wikipedia.org\"+e.href}>{e.text.split(' ')[0]}</a>\n                                            :[]\n                                        }\n                                        {\n                                            parseInt(e.text.split(' ')[0])?\n                                            e.text.split(' ').slice(1,e.text.split(' ').length-1).join(\" \"):e.text\n                                        } */}\n                                        {e.text}\n                                        {e.subText.length ?\n                                            <ul>\n                                                {e.subText.map(s => <li key={s}>{s}</li>)}\n                                            </ul> : e.subText}\n                                    </li>) :\n\n                            events\n                                // .filter((e, i) => i >= index && i < index + range)\n                                .map((e, i) =>\n                                    <li key={i}>\n                                        {e.text}\n                                        {e.subText.length ?\n                                            <ul>\n                                                {e.subText.map(s => <li key={s}>{s}</li>)}\n                                            </ul> : e.subText}\n                                    </li>)\n                        }\n                    </ul>\n            </div>\n \n            <div className=\"page-selectors\">\n                {/* <div\n                    className=\"page-selector\"\n                    onClick={backPage}\n                >\n                    {\"<\"}\n                </div>\n                <input\n                    className=\"page-number\"\n                    value={Math.floor(index / range) + 1}\n                    onKeyDown={validateInput}\n                    onChange={() => { }}\n                    onMouseMove={(e) => e.preventDefault()}\n                >\n                </input>\n                <div\n                    className=\"page-selector\"\n                    onClick={forwardPage}\n                >\n                    {\">\"}\n                </div> */}\n            </div>\n            <div className=\"page-info\">\n                {/* Page */}\n            </div>\n                \n        </div>\n    );\n};\n\nexport default DateHistoryEvents;","import {useState,useEffect} from 'react';\nimport Tabs from \"../Tabs/Tabs\";\nimport Card from \"../Card/Card\";\nimport Events from \"../DateHistoryEvents/DateHistoryEvents\"\nimport axios from 'axios';\nimport cheerio from 'cheerio';\nimport utils from '../../utils';\nimport \"./DateHistory.css\";\n\nconst {months} = utils;\n\nconst tabs = [\n    \"Events\",\n    \"Births\",\n    \"Deaths\",\n    \"Holidays and observances\"\n];\n\nconst tabsShort = [\n    \"Events\",\n    \"Births\",\n    \"Deaths\",\n    \"Holidays\"\n];\n\nasync function scrapeSite(url,setTabData,storeSiteData){\n    const html = await axios.get(url);\n    const $ = await cheerio.load(html.data.parse.text);\n    let data = {};\n\n    $('h2').each((i, elem) => {\n        if (i > 0 && i <= 4) {\n            data[$(elem).text().trim().replace('[edit]','')]=[];\n        }\n    });\n\n    //console.log(data);\n\n    $('ul').each((i, elem) => {\n        if(elem.prev&&elem.prev.prev){\n            const elemHeader = $(elem.prev.prev).text().trim().replace('[edit]','')\n            if (tabs.includes(elemHeader)) {\n                // console.log($(elem.prev.prev).text().trim())\n                // console.log(\"---------------------------------\");\n                $(elem).children().each((i, child) =>{\n                    // console.log(child\n                    //     .children\n                    //     .filter(c=>!isNaN(parseInt($(c).text())))\n                    //     .map(c=>c.attribs?c.attribs.href:undefined)[0]\n                    //     );\n                    data[elemHeader].push({\n                        text:child\n                            .children\n                            .filter(c=>[c.data,c.title])\n                            .map(e=>e.attribs?e.children[0].data:e.data)\n                            .join(\" \")\n                            .replace(/\\s+/g, \" \"),\n\n                        href:child\n                            .children\n                            .filter(c=>!isNaN(parseInt($(c).text())))\n                            .map(c=>c.attribs?c.attribs.href:undefined)[0],\n\n                        subText:child\n                            .children\n                            .filter(c=>c.name===\"ul\").length?\n                            child\n                                .children\n                                .filter(c=>c.name===\"ul\")[0]\n                                .children\n                                .filter(node=>node.name)\n                                .map(node=>$(node).text())\n                            :[]\n                    })\n                });\n            }\n        }\n    });\n\n   setTabData(data);\n   storeSiteData(url,data);\n}\n\nconst DateHistory = ({month,day}) => {\n    const [activeTab,setActiveTab] = useState(\"Events\");\n    const [activeTabComponent,setActiveTabComponent] = useState();\n    const [events,setEvents] = useState([]);\n    const [births,setBirths] = useState([]);\n    const [deaths,setDeaths] = useState([]);\n    const [holidays,setHolidays] = useState([]);\n\n    const setTabData=(data)=>{\n        setEvents(data[\"Events\"]);\n        setBirths(data[\"Births\"]);\n        setDeaths(data[\"Deaths\"]);\n        setHolidays(data[\"Holidays and observances\"]);\n    }\n\n    // \n    const storeSiteData=(url,data)=>{\n        //sessionStorage.setItem(url,JSON.stringify(data));\n    }\n\n    useEffect(()=>{\n        const url = `https://en.wikipedia.org/w/api.php?origin=*&action=parse&page=${months[month-1]}_${day}&prop=text&formatversion=2&format=json`;\n        sessionStorage.getItem(url)?\n        setTabData(JSON.parse(sessionStorage.getItem(url))):\n        scrapeSite(url,setTabData,storeSiteData);\n    },[day, month]);\n\n    useEffect(()=>{\n        if(!events.length) return;\n        const activeMatch = {\n            Births:births,Deaths:deaths,Holidays:holidays,Events:events\n        };\n        setActiveTabComponent(<Events events={activeMatch[activeTab]}/>);\n    },[events, activeTab, births, deaths, holidays]);\n\n    return (\n        <Card\n            border={true}\n            title={`On ${months[month-1]} ${day} in history`}\n            tabs={<Tabs active={activeTab} onClick={setActiveTab} tabs={tabsShort}/>}\n            content={activeTabComponent}\n        />\n    );\n};\n  \nexport default DateHistory;","import { useState } from \"react\";\nimport \"./DateSearch.css\";\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst getMaxDay = (y,m) =>{\n    return new Date(y, m + 1, 0).getDate();\n}\n\nconst DateSearch = ({selected,setSelected}) => {\n    const [month,setMonth] = useState(selected.getMonth());\n    const [year,setYear] = useState(selected.getFullYear());\n    const [day,setDay] = useState(selected.getDate());\n\n    const days = [];\n    for(let i = 1; i<=31;i++)days.push(i);\n\n    const monthOnChange = e => setMonth(months.indexOf(e.target.value));\n\n    const dayOnChange = e => setDay(parseInt(e.target.value));\n\n    const yearChange = e => parseInt(e.target.value)?setYear(e.target.value):null;\n\n    const submitYear = () => \n        new Date(year,month,day).toString()!==\"Invalid Date\"?\n            setSelected(new Date(year.toString(),month,day)):\n            null\n\n    return (\n        <div className=\"date-search-container\">\n            <select defaultValue={months[selected.getMonth()]} onChange={monthOnChange}>\n                {months.map((month,i)=>\n                    <option key={i} value={month}>{month}</option>\n                )}\n            </select>\n            <select defaultValue={selected.getDate()} onChange={dayOnChange}>\n                {days\n                    .filter(d=>d<=getMaxDay(year,month))\n                    .map((day,i)=>\n                        <option key={i} value={day}>{day}</option>\n                )}\n            </select>\n            <input type=\"number\" className=\"yearInput\" onChange={yearChange} defaultValue={selected.getFullYear()}/>\n            <button className=\"search-button btn\" onClick={submitYear}>Search</button>\n        </div>\n    );\n};\n  \nexport default DateSearch;","import { useEffect, useState } from 'react';\nimport \"./DateTimeUntil.css\";\nimport utils from \"../../utils\"\nconst {timeDiff} = utils;\n\n\nconst daysArray = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\nconst DateTimeUntil = ({selected}) => {\n    const [seconds,setSeconds] = useState(timeDiff(selected).seconds);\n    const [minutes,setMinutes] = useState(timeDiff(selected).minutes);\n    const [hours,setHours] = useState(timeDiff(selected).hours);\n    const [days,setDay] = useState(timeDiff(selected).days);\n    const [months,setMonths] = useState(timeDiff(selected).months);\n    const [years,setYears] = useState(timeDiff(selected).years);\n    const [firstDateWasLater,setFirstDateWasLater] = useState(timeDiff(selected).firstDateWasLater);\n    const [selectedDate,setSelectedDate] = useState([selected.getDate(),selected.getMonth(),selected.getFullYear()].join(''));\n    const [currentDate,setCurrentDate] = useState([new Date().getDate(),new Date().getMonth(),new Date().getFullYear()].join(''));\n    const [contents,setContents] = useState(\n        <div className=\"row today-row\">\n            <h2>Today</h2>\n        </div>\n    );\n    const [tense,setTense] = useState(\"is\");\n    const [ending,setEnding] = useState(\"\");\n\n    useEffect(()=>{\n        setSeconds(timeDiff(selected).seconds)\n        setMinutes(timeDiff(selected).minutes)\n        setHours(timeDiff(selected).hours)\n        setDay(timeDiff(selected).days)\n        setMonths(timeDiff(selected).months)\n        setYears(timeDiff(selected).years)\n        setFirstDateWasLater(timeDiff(selected).firstDateWasLater)\n        setSelectedDate([selected.getDate(),selected.getMonth(),selected.getFullYear()].join(''))\n        setCurrentDate([new Date().getDate(),new Date().getMonth(),new Date().getFullYear()].join(''))\n        \n        const totalDays=utils.timeDiffDays(selected);\n\n        if(selectedDate===currentDate){\n            setTense(\"is\");\n            setEnding(\"\");\n            setContents(<div className=\"row today-row\">\n                <h2>Today</h2>\n            </div>);\n        }\n    \n        else {\n            if(firstDateWasLater){\n                setTense(\"was\");\n                setEnding(\"in the past.\");\n                setContents(\n                    <div className=\"row past-row\">\n                        <div className=\"time-until-counter row\">\n                            <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{years}</div>\n                                <div className=\"time-block-type\">\n                                    {years===1?\"Year\":\"Years\"}\n                                </div>\n                            </div>\n                            <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{months}</div>\n                                <div className=\"time-block-type\">\n                                    {months===1?\"Month\":\"Months\"}\n                                </div>\n                            </div>\n                            <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{days}</div>\n                                <div className=\"time-block-type\">\n                                    {days===1?\"Day\":\"Days\"}\n                                </div>\n                            </div>\n                            <div className=\"past-row\">\n                                a total of {totalDays} {totalDays===1?\"day\":\"days\"} ago.\n                            </div>\n                        </div>\n                    </div>);\n            }\n            else {\n                setTense(\"is\");\n                setEnding(\"in the future.\");\n                setContents(\n                    <div className=\"row future-row\">\n                        <div className=\"time-until-counter row\">\n                        <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{years}</div>\n                                <div className=\"time-block-type\">\n                                    {years===1?\"Year\":\"Years\"}\n                                </div>\n                            </div>\n                            <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{months}</div>\n                                <div className=\"time-block-type\">\n                                    {months===1?\"Month\":\"Months\"}\n                                </div>\n                            </div>\n                            <div className=\"time-until-counter-block col-xl-4\">\n                                \n                                <div className=\"time-block-time\">{days}</div>\n                                <div className=\"time-block-type\">\n                                    {days===1?\"Day\":\"Days\"}\n                                </div>\n                            </div>\n                            <div className=\"timer-row row\">\n                                <div className=\"time-dif col\">{hours}</div>:\n                                <div className=\"time-dif col\">{minutes}</div>:\n                                <div className=\"time-dif col\">{seconds}</div>\n                            </div>\n                            <div className=\"future-row\">\n                                {ending}\n                            </div>\n                        </div>\n                        \n                        \n                    </div>);\n            }\n        }\n        \n    },[currentDate, days, ending, firstDateWasLater, hours, minutes, months, seconds, selected, selectedDate, years]);\n\n    const updateTimes = () => {\n        setSeconds(timeDiff(selected).seconds)\n        setMinutes(timeDiff(selected).minutes)\n        setHours(timeDiff(selected).hours)\n    }\n    \n\n    useEffect(()=>{\n        let interval = window.setInterval(() => {\n            updateTimes();   \n        }, 1000);\n        return window.clearInterval(interval);  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    \n\n\n\n    return (\n        <div className=\"time-until-container\">\n            <div className=\"time-until-title\">\n                {selected.getMonth()+1}/{selected.getDate()}/{selected.getFullYear()} {tense} a {daysArray[selected.getDay()]}\n            </div>\n            <div className=\"time-until-title-contents\">\n                {contents}\n            </div>\n            \n        </div>\n    );\n};\n  \nexport default DateTimeUntil;","import { useEffect, useState } from 'react';\nimport Card from \"../Card/Card\";\nimport axios from 'axios';\nimport cheerio from 'cheerio';\n\nfunction reverse(array) {\n    return array.map((item, idx) => array[array.length - 1 - idx])\n}\n\nconst TopTenBillboards = ({selected}) => {\n    const [reverseEvents, setReverseEvents] = useState(false);\n\n    useEffect(()=>{\n        // date format YYYY-MM-DD\n \n    },[selected])\n\n    return (\n        <Card\n            border={true}\n            title={`TOP 10 Music Playlist for ${selected.getMonth()+1}/${selected.getDate()}/${selected.getFullYear()}`}\n            underlineTitle={true}\n            content={\n                <div className=\"tab-list\">\n                    <div className=\"dh-filter\" onClick={() => setReverseEvents(!reverseEvents)}>\n                        {reverseEvents ? \"▲ Reverse\" : \"▼ Reverse\"}\n                    </div>\n                    <div className=\"tab-list-contents\">\n                            <ul>\n                                {reverseEvents ?\n                                    reverse([1,2,3,4,5,6,7,8,9,10])\n                                        .map((e, i) =>\n                                            <li key={i}>\n                                                {e}\n                                            </li>) :\n\n                                    [1,2,3,4,5,6,7,8,9,10]\n                                        .map((e, i) =>\n                                            <li key={i}>\n                                                {e}\n                                            </li>)\n                                }\n                            </ul>\n                    </div>\n                </div>\n            }\n        />\n    );\n};\n  \nexport default TopTenBillboards;","import {useEffect, useState} from 'react';\nimport CalendarSingle from \"../CalendarSingle/CalendarSingle\";\nimport DateHistory from \"../DateHistory/DateHistory\";\nimport DateSearch from \"../DateSearch/DateSearch\";\nimport DateTimeUntil from \"../DateTimeUntil/DateTimeUntil\";\nimport TopTenBillboards from \"../TopTenBillboards/TopTenBillboards\";\nimport Card from \"../Card/Card\";\nimport \"./Home.css\";\nimport utils from \"../../utils\";\n\nconst days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst Home = ({selected,setSelected}) => {\n\n    useEffect(()=>{\n        let monthPartial = utils.months[selected.getMonth()].toLowerCase().slice(0, 3);\n        let stateObj = { id: \"100\" };\n\n        window.location.host.split(\":\")[0] === \"localhost\" || window.location.host.split(\":\")[0] === \"DateTools\" ?\n            window.history.pushState(stateObj,\n                \"DateTools\", `/home/${selected.getFullYear()}/${monthPartial}/${selected.getDate()}`) :\n            window.history.pushState(stateObj,\n                \"DateTools\", `/DateTools/home/${selected.getFullYear()}/${monthPartial}/${selected.getDate()}`)\n\n      },[selected])\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-header row\">Use the date picker and other date tools to learn more about what happened on the selected day.</div>\n            <div className=\"row\">\n                <DateSearch selected={selected} setSelected={setSelected}/>\n                <div className=\"day-selected-title\">\n                    Showing date information for <br></br>{days[selected.getDay()]} {months[selected.getMonth()]} {selected.getDate()}, {selected.getFullYear()}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-4 date-handlers\">\n                        <div className=\"row additional-calendar-row-padding\">\n                            <CalendarSingle selected={selected} setSelected={setSelected}/>\n                        </div>\n                        <div className=\"row flex-fill-height\">\n                            <div className=\"fill-remaining-space\">\n                                <DateTimeUntil selected={selected}/>\n                            </div>\n                        </div>\n                </div>\n                <div className=\"col-md additional-col-styling\">\n                        <TopTenBillboards selected={selected}/>\n                        \n                </div>\n                <div className=\"col-xl\">\n                    <div className=\"row additional-row-styling\">\n                        <DateHistory \n                            selected={selected}\n                            month={selected.getMonth()+1}\n                            year={selected.getFullYear()}\n                            day={selected.getDate()}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n  \nexport default Home;","import { useState } from 'react';\nimport CalendarCell from \"../CalendarCell/CalendarCell\";\nimport \"../CalendarSingle/CalendarSingle.css\";\n\nconst months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst base = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n\nfunction monthRows(year, month) {\n    let minDay = 1;\n    let maxDay = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n\n    const days = [];\n\n    if (firstDay > 0) minDay -= firstDay;\n    for (let i = minDay; i <= maxDay; i++) {\n        const day = new Date(year, month, i).getDay();\n        days.push(new Date(year, month, i));\n        if (i === maxDay && day < 6) maxDay++;\n    }\n\n    return days;\n}\n\nconst CalendarSingle = ({ month, year }) => {\n\nreturn (\n    <div className=\"calendar-wrapper\">\n        <div className=\"calendar-container\">\n            <div className=\"calendar-title-container\">\n                <div className=\"calendar-title\">{months[month]}</div>\n            </div>\n            <div className=\"calendar-body\">\n                <div className=\"calendar-body-content\">\n                    {base.map((day, i) =>\n                        <CalendarCell\n                            key={i}\n                            day={day}\n                            onClick={() => { }}\n                            selected=\"header-cell\"\n                        />\n                    )}\n                    {monthRows(year, month).map((day, i) => {\n                        return day.getMonth() !== month ?\n                            <CalendarCell\n                                key={i}\n                                onClick={() => { }}\n                                selected=\"\"\n                            /> :\n                            <CalendarCell\n                                key={i}\n                                day={day.getDate()}\n                                onClick={() => {}}\n                                selected={\"\"}\n                            />\n                    })}\n                </div>\n            </div>\n        </div>\n    </div>\n);\n                }\n\nexport default CalendarSingle;","import { useEffect, useRef, useState } from 'react';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport CalenderUnit from '../CalendarUnit/CalendarUnit';\nimport { Page, Text, View, Document, StyleSheet, Image as Img } from '@react-pdf/renderer';\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\n\nimport \"./Calendar.css\"\n\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\nconst styles = StyleSheet.create({\n    page: {\n      flexDirection: 'row',\n      backgroundColor: '#E4E4E4'\n    },\n    section: {\n      margin: 10,\n      padding: 10,\n      flexGrow: 1\n    }\n});\n\nconst Calendar = props => {\n    const [image,setImage] = useState(undefined)\n\n    const containerRef = useRef(0);\n\n    useEffect(()=>{\n        if(image) return;\n        //console.log(document.getElementById('calendar-container'))\n        //setInterval(() => {\n        toPng(containerRef.current)\n            .then(function (dataUrl) {\n                var img = new Image();\n                img.src = dataUrl;\n                //console.log(dataUrl)\n                setImage(<Img src={img.src} />);\n            })\n            .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n            });\n        //  }, 10000)\n    }, [image]);\n\n    useEffect(()=>{\n        let stateObj = { id: \"100\" };\n\n        window.location.host.split(\":\")[0] === \"localhost\" || window.location.host.split(\":\")[0] === \"DateTools\" ?\n            window.history.pushState(stateObj,\n                \"DateTools\", `/calendar/`) :\n            window.history.pushState(stateObj,\n                \"DateTools\", `/DateTools/calendar/`)\n    },[])\n    \n    return (\n       [<div key={\"calendar-container\"} id=\"calendar-container\">\n           <div className=\"inner-calendar-container\" ref={containerRef}>\n            <div className=\"calendar-title-top\">{\"2020\"}</div>\n            <div className=\"row\">\n                {months.map((month,i)=>\n                    <div key={month} className=\"col-4\">\n                        <CalenderUnit key={month+i} month={months.indexOf(month)} year={\"2020\"}/>\n                    </div>\n                )}\n            </div>\n           </div>\n        </div>,\n        <PDFViewer key={\"pdf-viewer\"}>\n            <Document>\n                <Page size=\"A4\" style={styles.page}>\n                    {image}\n                </Page>\n            </Document>\n        </PDFViewer>]\n    );\n};\n  \nexport default Calendar;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport utils from './utils'\nimport PageHeader from \"./components/PageHeader/PageHeader\";\nimport Card from \"./components/Card/Card\";\nimport Home from \"./components/Home/Home\";\nimport Calendar from \"./components/Calendar/Calendar\"\nimport Tabs from \"./components/Tabs/Tabs\";\nimport './App.css';\n\nasync function getLocation(setLocation) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(setLocation,error);\n  }\n\n  function error(error){\n    console.log(error);\n  }\n\n}\n\nconst  App = () => {\n  const [selected,setSelected] = useState(utils.dateFromUrl(window.location));\n  const [activeTab,setActiveTab] = useState(utils.tabFromUrl(window.location));\n  const [location,setLocation] = useState();\n  const [localWeather,setLocalWeather] = useState();\n  \n\n  useEffect(()=>{\n    document.getElementById(\"meta-title\").innerHTML = selected.toLocaleString().split(\", \")[0];\n    const day = selected.getDate();\n    const dayName = utils.days[selected.getDay()];\n    const month = utils.months[selected.getMonth()];\n    const {days,months,years,firstDateWasLater} = utils.timeDiff(selected);\n    const totalDays = utils.timeDiffDays(selected);\n    const monthNumber = selected.getMonth()+1;\n    const year = selected.getFullYear().toString();\n    const selectedDate = [selected.getDate(),selected.getMonth(),selected.getFullYear()].join('');\n    const currentDate = [new Date().getDate(),new Date().getMonth(),new Date().getFullYear()].join('');\n\n    const dateConfig = `${day} ${month}, ${year} (${year}/${monthNumber}/${day} or ${day}-${monthNumber}-${year[year.length-2]}${year[year.length-1]})`\n\n    if(selectedDate===currentDate){\n      document.getElementById(\"meta-description\").content=\n      `Today is ${dateConfig}, ${dayName}. Use the date picker and other date tools to learn more about what happened on the selected day. {president} was the US president and {artist} - {song} was the most popular song.`\n    }\n    else{\n      if(firstDateWasLater){\n        document.getElementById(\"meta-description\").content=\n        `${dateConfig} was ${dayName} ${years} ${years===1?\"year\":\"years\"}, ${months} ${months===1?\"month\":\"months\"} and ${days} ${days===1?\"day\":\"days\"} ago, a total of ${totalDays} ${totalDays===1?\"day\":\"days\"} ago.`\n      }\n      else {\n        document.getElementById(\"meta-description\").content=\n        `There are ${years} ${years===1?\"year\":\"years\"}, ${months} ${months===1?\"month\":\"months\"} and ${days} ${days===1?\"day\":\"days\"} until ${dateConfig}, ${dayName}. By then we are expecting {predictions}.`\n      }\n    }\n    \n    },[selected])\n\n  \n\n  useEffect(()=>{\n    async function setCurrentLocation(position) {\n      if(location) return;\n      var GEOCODING = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${position.coords.latitude}&longitude=${position.coords.longitude}&localityLanguage=en`;\n      const res = await axios.get(GEOCODING);\n      const weatherRes = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=123c202ae147ce1a36f513e0a54fd90f`)\n      weatherRes.data.sys.country=\"US\"?\n        setLocalWeather(\n          [\n            Math.floor(weatherRes.data.main.temp * 9/5 - 459.67)+\"°F\",\n            weatherRes.data.weather[0].main,\n            \"H:\"+Math.floor(weatherRes.data.main.temp_max * 9/5 - 459.67)+\"°F\",\n            \"L:\"+Math.floor(weatherRes.data.main.temp_min * 9/5 - 459.67)+\"°F\"\n          ].join(\" \")):\n        setLocalWeather(\n          [\n            Math.floor(weatherRes.data.main.temp - 273.15)+\"°C\",\n            weatherRes.data.weather[0].main,\n            \"H:\"+Math.floor(weatherRes.data.main.temp_max - 273.15)+\"°C\",\n            \"L:\"+Math.floor(weatherRes.data.main.min - 273.15)+\"°C\"\n          ].join(\" \"))\n\n      setLocation([res.data.city,res.data.principalSubdivision].join(\", \"));\n    }\n    if(!location){\n      //getLocation(setCurrentLocation);\n    }\n  },[location])\n\n  const tabComponents = {\n    \"Home\":<Home selected={selected} setSelected={setSelected}/>,\n    \"Calendar\":<Calendar/>\n  }\n\n  return (\n    <div className=\"App\">\n      <Card\n        border={false}\n        title={<PageHeader selected={selected} location={location} weather={localWeather}/>}\n        tabs={<Tabs active={activeTab} onClick={setActiveTab} tabs={Object.keys(tabComponents)} tabSize={'large-tab'}/>}\n        content={tabComponents[activeTab]}\n        wholePage={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"*\" component={App} />\n        </Switch>\n    </BrowserRouter>\n      \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}